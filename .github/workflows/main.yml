name: Build Pymakr

on:
  pull_request: ~
  push:
    branches-ignore:
      - "dependabot/**"
    paths-ignore:
      - "doc/**"
  schedule:
    - cron: "* * 1 * *"

env:
  ELECTRON_VERSIONS: ""

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Fetch Electron Versions
        id: electron
        uses: ./.github/actions/fetch-electron-versions
        with:
          max-count: 3
          git-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump ELECTRON_VERSIONS
        run: echo "$ELECTRON_VERSIONS"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  build:
    name: "Build ${{ matrix.os }} against ${{ matrix.electron.runtime_version }} (VSC: ${{ matrix.electron.tag }})"
    needs: [setup]
    runs-on: ${{ matrix.os }}
    strategy:
      # run all os/electron tests even if one fails
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        electron: [7.1.1]
    steps:
      - uses: actions/checkout@v1

      - name: Setup node
        uses: actions/setup-node@v1.2.0
        with:
          node-version: "12"

      - name: Install Dependencies
        shell: bash
        run: |
          npm install npx
          npm add prebuild-install --save-dev
          npm install --no-audit

      #      todo: fix errors in running prebuild-install in Action runners
      #      - name: Update Native Modules
      #        run: npm run download-native

      - name: Build pymakr-vsc
        run: npm run build

      # generic all up electron test
      - name: Test Bindings (macOS/Windows)
        if: matrix.os != 'ubuntu-latest'
        run: npm run test-electron -- ${{ matrix.electron.runtime_version }}

      # electron tests with virtual x server
      - name: Test Bindings (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run -e /dev/stdout -a npm run test-electron -- ${{ matrix.electron.runtime_version }}

      # No tests written :(
      # - name: Run Tests
      #   run: npm run test

      - name: Package Extension
        run: npx vsce package -o pymakr-${{ github.sha }}.vsix

      - name: Upload VSIX
        if: github.event_name == 'schedule'
        uses: actions/upload-artifact@master
        with:
          name: pymakr-nightly.vsix
          path: ./pymakr-${{ github.sha }}.vsix

  deploy:
    name: Publish
    needs: [setup, build]
    # if current branch name contains release and is not a PR
    if: contains(github.ref, 'release') && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install Production Dependencies
        run: |
          npm ci
          npm prune --production

      - name: Package Extension
        run: npx vsce package

      - name: Publish Extension
        run: npx vsce publish --pat ${{ secrets.VSCE_TOKEN }}
